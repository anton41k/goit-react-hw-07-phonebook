{"version":3,"sources":["components/Contact/Contact.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","App.module.css","services/contactApi.js","redux/contacts/actions.js","components/Form/Form.jsx","redux/contacts/selectors.js.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","redux/contacts/reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getContacts","query","providesTags","addContact","mutation","url","method","body","name","number","invalidatesTags","deleteContact","contactId","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","getFilterValue","createAction","getAddNameContact","getFirstLetteName","Form","contacts","data","isLoading","dispatch","useDispatch","nameInputId","uuidv4","numberInputId","handleSubmit","ev","a","preventDefault","currentTarget","elements","find","contact","value","toast","error","reset","actions","success","className","css","form","onSubmit","form_label","htmlFor","thumb_input","form_icon","size","id","form_input","type","pattern","title","required","form_submit_disabled","form_submit_active","form_submit","disabled","loading","color","state","phonebook","filter","addNameContact","firstLetteName","Contact","optionFirstLetter","isDeleting","firstUpperLetterContact","contact_item_add","contact_item_h","contact_item","first_letter","onClick","firstLetter","style","backgroundColor","contact_name","item_data","contact_number","del_btn_disabled","del_btn_active","del_btn","letter","str","red","green","blue","Math","floor","random","stringToColor","substr","toUpperCase","ContactList","useSelector","filteredContacts","filterValue","filterToFirstLetteName","normalizeFilter","console","log","toLowerCase","includes","sort","b","localeCompare","refetchOnReconnect","selectFromResult","isResetFilters","length","csss","tumb_all_contacts","all_contacts","contact_list","margin","map","Filter","filter_label","filter_input","onChange","event","target","App","container","title_phonebook","title_contacts","position","autoClose","createReducer","_","payload","combineReducers","store","getDefaultMiddleware","logger","middleware","configureStore","reducer","contactsReducer","devTools","process","setupListeners","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa0e81dc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"del_btn\":\"Contact_del_btn__CAybw\",\"del_btn_active\":\"Contact_del_btn_active__1yAZu\",\"del_btn_disabled\":\"Contact_del_btn_disabled__1ATr2\",\"contact_checkbox\":\"Contact_contact_checkbox__16h0L\",\"first_letter\":\"Contact_first_letter__30bsc\",\"contact_item\":\"Contact_contact_item__3aJjb\",\"contact_item_h\":\"Contact_contact_item_h__2qZf7\",\"item_data\":\"Contact_item_data__wfNDd\",\"contact_item_add\":\"Contact_contact_item_add__2aXUm\",\"contact_number\":\"Contact_contact_number__1Xndh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_label\":\"Filter_filter_label__2CIWW\",\"filter_input\":\"Filter_filter_input__1XGNE\",\"thumb_input\":\"Filter_thumb_input__KsOj5\",\"form_icon\":\"Filter_form_icon__16yn1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"ContactList_contact_list__2wapF\",\"tumb_all_contacts\":\"ContactList_tumb_all_contacts__20NLr\",\"all_contacts\":\"ContactList_all_contacts__3Rmcn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__31-yz\",\"title_phonebook\":\"App_title_phonebook__3rzMu\",\"title_contacts\":\"App_title_contacts__Z0kKR\"};","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const contactApi = createApi({\n  reducerPath: \"contactApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://616aba8f16e7120017fa108a.mockapi.io/api/v1\",\n  }),\n  tagTypes: [\"Contact\"],\n  endpoints: (builder) => ({\n    getContacts: builder.query({\n      query: () => `/contacts`,\n      providesTags: [\"Contact\"],\n    }),\n    addContact: builder.mutation({\n      query: ({ name, number }) => ({\n        url: \"/contacts\",\n        method: \"POST\",\n        body: {\n          name,\n          number,\n        },\n      }),\n      invalidatesTags: [\"Contact\"],\n    }),\n    deleteContact: builder.mutation({\n      query: (contactId) => ({\n        url: `/contacts/${contactId}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"Contact\"],\n    }),\n  }),\n});\n\nexport const {\n  useGetContactsQuery,\n  useAddContactMutation,\n  useDeleteContactMutation,\n} = contactApi;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const getFilterValue = createAction(\"filter/get\");\nexport const getAddNameContact = createAction(\"addNameContact/get\");\nexport const getFirstLetteName = createAction(\"firstLetteName/get\");\n","import { useGetContactsQuery,  useAddContactMutation } from \"../../services/contactApi\";\nimport  toast  from 'react-hot-toast';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FaUser, FaPhoneAlt } from 'react-icons/fa';\n\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from \"./Form.module.css\";\n\nimport { useDispatch } from 'react-redux';\nimport { actions } from '../../redux/contacts';\n\n\nfunction Form() {\n  const { data: contacts, isLoading } = useGetContactsQuery();\n  const [addContact] = useAddContactMutation();\n  \n  const dispatch = useDispatch();\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    const { name, number } = ev.currentTarget.elements;\n\n    const found = contacts.find((contact) => contact.name === name.value);\n    if (found) {\n      toast.error(`${name.value} is already in contacts`);\n      ev.currentTarget.reset();\n        return\n      }\n    \n    dispatch(actions.getAddNameContact(name.value))\n    \n    try {\n      addContact({name: name.value, number: number.value});\n      toast.success(`Contact ${name.value} created!`);\n      ev.currentTarget.reset();\n      dispatch(actions.getFilterValue(''));\n      dispatch(actions.getFirstLetteName(null))\n    } catch (error) {\n      toast.error(error);\n    }\n}\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.form_label} htmlFor={nameInputId}>\n        Name\n        <div className={css.thumb_input}>\n          <div className={css.form_icon}>\n            <FaUser size={16} />\n          </div>\n          <input\n            id={nameInputId}\n            className={css.form_input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </div>\n      </label>\n\n      <label className={css.form_label} htmlFor={numberInputId}>\n        Number\n        <div className={css.thumb_input}>\n          <div className={css.form_icon}>\n            <FaPhoneAlt size={16} />\n          </div>\n          <input\n            id={numberInputId}\n            className={css.form_input}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </div>\n      </label>\n      <button\n        className={`${isLoading ? css.form_submit_disabled : css.form_submit_active} ${css.form_submit}`}\n        type=\"submit\"\n        disabled={isLoading}>\n          <ClipLoader loading={isLoading} size={12} color={'white'}/> {` Add contact`}\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","export const getFilterValue = (state) => state.phonebook.filter;\nexport const getAddNameContact = (state) => state.phonebook.addNameContact;\nexport const getFirstLetteName = (state) => state.phonebook.firstLetteName;\n","import toast from 'react-hot-toast';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { useDeleteContactMutation } from \"../../services/contactApi\";\r\nimport { actions } from '../../redux/contacts';\r\nimport css from \"./Contact.module.css\";\r\n\r\n\r\n\r\nconst Contact = ({ id, name, number, addNameContact, optionFirstLetter }) => {\r\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\r\n  const firstUpperLetterContact = optionFirstLetter(name);\r\n  const dispatch = useDispatch();\r\n  if (isDeleting) {\r\n    toast.success(`Contact ${name} is delete!!!`);\r\n  }\r\n\r\n const filterForFirstLette = () => {\r\n   dispatch(actions.getFirstLetteName(firstUpperLetterContact.firstLetter));\r\n   \r\n  }\r\n  \r\n  return (\r\n    <li \r\n      className={`${addNameContact === name ? `${css.contact_item_add}` : `${css.contact_item_h}`} ${css.contact_item}`}>\r\n      {firstUpperLetterContact &&\r\n        <span\r\n          className={css.first_letter}\r\n          onClick={filterForFirstLette}\r\n          style={{ backgroundColor:  firstUpperLetterContact.backgroundColor  }}>\r\n            {firstUpperLetterContact.firstLetter}\r\n        </span>}\r\n      <span className={`${css.contact_name} ${css.item_data}`}>{name}</span>\r\n      <span className={`${css.contact_number} ${css.item_data}`}>{number}</span>\r\n\r\n      <button\r\n        className={`${isDeleting ? css.del_btn_disabled : css.del_btn_active} ${css.del_btn}`}\r\n        onClick={() => deleteContact(id)}\r\n        disabled={isDeleting}>\r\n                {isDeleting ? 'Deleting....' : 'Delete'}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport { css } from \"@emotion/react\";\r\nimport { AiOutlineTeam } from 'react-icons/ai';\r\n\r\nimport { useGetContactsQuery } from \"../../services/contactApi\";\r\nimport { getFilterValue, getAddNameContact, getFirstLetteName } from '../../redux/contacts/selectors.js';\r\nimport { actions } from '../../redux/contacts';\r\nimport Contact from \"../Contact/Contact\";\r\nimport csss from \"./ContactList.module.css\";\r\n\r\nlet stringToColor = (str) => {\r\n  let red = 0;\r\n  let green = 0;\r\n  let blue = 0;\r\n  let color = 'rgba';\r\n\r\n    if(!str) {\r\n        return color + '(69, 103, 137, 0.2)';\r\n    }\r\n\r\n    red = Math.floor(Math.random() * 250 + 0 );\r\n    green = Math.floor(Math.random() * 250 + 0);\r\n    blue = Math.floor(Math.random() * 250 + 0);\r\n\r\n  color = `${color}(${red},${green},${blue},0.2)`\r\n    return color;\r\n};\r\nlet letter = '';\r\nconst optionFirstLetter = (name) => {\r\n  let backgroundColor = stringToColor(name);\r\n  const firstLetter = name.substr(0, 1).toUpperCase();\r\n  //console.log(letter, 'firstLetter ',firstLetter);\r\n  if(letter !== firstLetter){\r\n    letter = firstLetter;\r\n    return {backgroundColor: backgroundColor, firstLetter: firstLetter}\r\n  }\r\n  return null\r\n}\r\n\r\nconst ContactList = () => {\r\n  const filter = useSelector(getFilterValue);\r\n  const addNameContact = useSelector(getAddNameContact);\r\n  const firstLetteName = useSelector(getFirstLetteName);\r\n  const dispatch = useDispatch();\r\nletter = '';\r\n  const filteredContacts = (filterValue, filterToFirstLetteName, contacts) => {\r\n    let normalizeFilter = null;\r\n    console.log('filter ',filter, 'firstLetteName ', firstLetteName);\r\n    if (firstLetteName) {\r\n      normalizeFilter = filterToFirstLetteName.toLowerCase();\r\n      return contacts?.filter(({ name }) => name.substr(0, 1).toLowerCase().includes(normalizeFilter))\r\n    }\r\n    else {\r\n      \r\n      normalizeFilter = filterValue.toLowerCase();\r\n      return contacts?.filter(\r\n        ({ name, number }) =>\r\n          name.toLowerCase().includes(normalizeFilter) ||\r\n          number.includes(normalizeFilter),\r\n      )\r\n      .sort((a, b) => a.name.localeCompare(b.name));\r\n    }\r\n  };\r\n\r\n  const { contacts } = useGetContactsQuery(null, {\r\n    refetchOnReconnect: true,\r\n    selectFromResult: ({ data }) => ({\r\n      contacts: filteredContacts(filter, firstLetteName, data),\r\n    }),\r\n  });\r\n  let isResetFilters = filter.length > 0 || firstLetteName;\r\n\r\n  const resetFilteres = () => {\r\n    dispatch(actions.getFilterValue(''));\r\n    dispatch(actions.getFirstLetteName(null))\r\n  }\r\nconsole.log(contacts);\r\n  return (\r\n    <>\r\n      {isResetFilters &&\r\n        <div className={csss.tumb_all_contacts}>\r\n          <div title='All contacts' className={csss.all_contacts}>\r\n            <AiOutlineTeam size={18} onClick={resetFilteres} />\r\n          </div>\r\n        </div>}\r\n      <ul className={csss.contact_list}>\r\n        <BeatLoader\r\n          loading={!contacts}\r\n          css={css`margin: 0 auto;`}\r\n          size={20}\r\n          margin={10}\r\n          color={\"green\"}\r\n        />\r\n        {contacts?.map((contact) => (\r\n          \r\n          <Contact\r\n            key={contact.id}\r\n            {...contact}\r\n            addNameContact={addNameContact}\r\n            optionFirstLetter={optionFirstLetter}\r\n          />\r\n            \r\n      ))}\r\n      </ul>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from 'react-redux';\nimport { AiOutlineSearch } from 'react-icons/ai';\n\nimport { getFilterValue } from '../../redux/contacts/selectors.js';\nimport { actions } from '../../redux/contacts';\nimport css from \"./Filter.module.css\";\n\nconst Filter = () => {\n  const filter = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n  dispatch(actions.getFirstLetteName(null))\n\n  return (\n    <label className={css.filter_label}>\n      Find contacts by name\n      <div className={css.thumb_input}>\n        <div className={css.form_icon}>\n          <AiOutlineSearch />\n        </div>\n        <input\n          className={css.filter_input}\n          type=\"text\"\n          value={filter}\n          onChange={event => dispatch(actions.getFilterValue(event.target.value))}\n        />\n      </div>\n  </label>\n  )\n};\n\nexport default Filter;\n","import { Toaster } from \"react-hot-toast\";\n\nimport Form from \"./components/Form/Form\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport css from \"./App.module.css\";\n\n//import formSubmitHandle from './redux/actions';\n\nexport default function App() {\n  return (\n    <div className={css.container}>\n      <h2 className={css.title_phonebook}>Phonebook</h2>\n      <Form />\n      <h2 className={css.title_contacts}>Contacts</h2>\n      <Filter />\n      <ContactList />\n      <Toaster position=\"top-right\" autoClose={3000} />\n    </div>\n  );\n}\n//<Filter /><Form />\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport { actions } from \"./\";\n\nconst filter = createReducer(\"\", {\n  [actions.getFilterValue]: (_, { payload }) => payload,\n});\n\nconst addNameContact = createReducer(null, {\n  [actions.getAddNameContact]: (_, { payload }) => payload,\n});\n\nconst firstLetteName = createReducer(null, {\n  [actions.getFirstLetteName]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ filter, addNameContact, firstLetteName });\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { setupListeners } from \"@reduxjs/toolkit/query\";\nimport logger from \"redux-logger\";\nimport contactsReducer from \"./contacts/reducer\";\nimport { contactApi } from \"../services/contactApi\";\n\nconst middleware = [...getDefaultMiddleware(), logger, contactApi.middleware];\n\nconst store = configureStore({\n  reducer: {\n    phonebook: contactsReducer,\n    [contactApi.reducerPath]: contactApi.reducer,\n  },\n  devTools: process.env.NODE_ENV === \"development\",\n  //middleware,\n});\n\nsetupListeners(store.dispatch);\nexport { store };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { store } from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__19oE2\",\"form_label\":\"Form_form_label__2Gz_7\",\"form_input\":\"Form_form_input__2KeEt\",\"thumb_input\":\"Form_thumb_input__3Clzt\",\"form_icon\":\"Form_form_icon__oSad5\",\"form_submit\":\"Form_form_submit__2fmaG\",\"form_submit_active\":\"Form_form_submit_active__3hmSS\",\"form_submit_disabled\":\"Form_form_submit_disabled__1RoD6\"};"],"sourceRoot":""}